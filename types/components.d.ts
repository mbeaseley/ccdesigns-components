/* eslint-disable */
/* tslint:disable */
/**
 * This is an autogenerated file created by the Stencil compiler.
 * It contains typing information for all components that exist in this project.
 */
import { HTMLStencilElement, JSXBase } from "./stencil-public-runtime";
import { JSX } from "./stencil-public-runtime";
import { FooterItem } from "./utils/modal/footer-item";
import { PlaceholderAlignment, PlaceholderHeight, PlaceholderPosition, PlaceholderWidth } from "./utils/types/placeholder";
import { NavDataItem } from "./utils/modal/nav-data-item";
export namespace Components {
    interface CcdesignButton {
        "alt": string;
        "color": string;
        "eventName": string;
        "icon": string;
        "type": string;
        "url": string;
    }
    interface CcdesignCarousel {
        "data": string;
        "dataElement": JSX.Element;
        "imageSelected": number;
        "timeInterval": 3000;
    }
    interface CcdesignCarouselNew {
        "data": string;
        "dataElement": any;
        "imageSelected": number;
        "timeInterval": 3000;
    }
    interface CcdesignCopy {
        "copy": string;
    }
    interface CcdesignCvTemplate {
        "footer": string;
        "header": string;
    }
    interface CcdesignFooter {
        "data": string;
        "dataContent": FooterItem;
    }
    interface CcdesignGrid {
        "heading": string;
    }
    interface CcdesignHeader {
        "data": string;
        "formattedData": any;
    }
    interface CcdesignIcon {
        "color": string;
        "name": string;
        "size": string;
        "svg": string;
    }
    interface CcdesignImageCard {
        "description": string;
        "imageAlt": string;
        "imageUrl": string;
        "url": string;
    }
    interface CcdesignLazyImage {
        "alt": string;
        "classNames": string;
        "imgSrc": string;
    }
    interface CcdesignPlaceholder {
        "alignment": PlaceholderAlignment;
        "height": PlaceholderHeight;
        "position": PlaceholderPosition;
        "width": PlaceholderWidth;
    }
    interface CcdesignSeparator {
    }
    interface CcdesignSocialContainer {
        "icon": string;
        "url": string;
    }
    interface MobileNav {
        "data": NavDataItem[];
    }
}
declare global {
    interface HTMLCcdesignButtonElement extends Components.CcdesignButton, HTMLStencilElement {
    }
    var HTMLCcdesignButtonElement: {
        prototype: HTMLCcdesignButtonElement;
        new (): HTMLCcdesignButtonElement;
    };
    interface HTMLCcdesignCarouselElement extends Components.CcdesignCarousel, HTMLStencilElement {
    }
    var HTMLCcdesignCarouselElement: {
        prototype: HTMLCcdesignCarouselElement;
        new (): HTMLCcdesignCarouselElement;
    };
    interface HTMLCcdesignCarouselNewElement extends Components.CcdesignCarouselNew, HTMLStencilElement {
    }
    var HTMLCcdesignCarouselNewElement: {
        prototype: HTMLCcdesignCarouselNewElement;
        new (): HTMLCcdesignCarouselNewElement;
    };
    interface HTMLCcdesignCopyElement extends Components.CcdesignCopy, HTMLStencilElement {
    }
    var HTMLCcdesignCopyElement: {
        prototype: HTMLCcdesignCopyElement;
        new (): HTMLCcdesignCopyElement;
    };
    interface HTMLCcdesignCvTemplateElement extends Components.CcdesignCvTemplate, HTMLStencilElement {
    }
    var HTMLCcdesignCvTemplateElement: {
        prototype: HTMLCcdesignCvTemplateElement;
        new (): HTMLCcdesignCvTemplateElement;
    };
    interface HTMLCcdesignFooterElement extends Components.CcdesignFooter, HTMLStencilElement {
    }
    var HTMLCcdesignFooterElement: {
        prototype: HTMLCcdesignFooterElement;
        new (): HTMLCcdesignFooterElement;
    };
    interface HTMLCcdesignGridElement extends Components.CcdesignGrid, HTMLStencilElement {
    }
    var HTMLCcdesignGridElement: {
        prototype: HTMLCcdesignGridElement;
        new (): HTMLCcdesignGridElement;
    };
    interface HTMLCcdesignHeaderElement extends Components.CcdesignHeader, HTMLStencilElement {
    }
    var HTMLCcdesignHeaderElement: {
        prototype: HTMLCcdesignHeaderElement;
        new (): HTMLCcdesignHeaderElement;
    };
    interface HTMLCcdesignIconElement extends Components.CcdesignIcon, HTMLStencilElement {
    }
    var HTMLCcdesignIconElement: {
        prototype: HTMLCcdesignIconElement;
        new (): HTMLCcdesignIconElement;
    };
    interface HTMLCcdesignImageCardElement extends Components.CcdesignImageCard, HTMLStencilElement {
    }
    var HTMLCcdesignImageCardElement: {
        prototype: HTMLCcdesignImageCardElement;
        new (): HTMLCcdesignImageCardElement;
    };
    interface HTMLCcdesignLazyImageElement extends Components.CcdesignLazyImage, HTMLStencilElement {
    }
    var HTMLCcdesignLazyImageElement: {
        prototype: HTMLCcdesignLazyImageElement;
        new (): HTMLCcdesignLazyImageElement;
    };
    interface HTMLCcdesignPlaceholderElement extends Components.CcdesignPlaceholder, HTMLStencilElement {
    }
    var HTMLCcdesignPlaceholderElement: {
        prototype: HTMLCcdesignPlaceholderElement;
        new (): HTMLCcdesignPlaceholderElement;
    };
    interface HTMLCcdesignSeparatorElement extends Components.CcdesignSeparator, HTMLStencilElement {
    }
    var HTMLCcdesignSeparatorElement: {
        prototype: HTMLCcdesignSeparatorElement;
        new (): HTMLCcdesignSeparatorElement;
    };
    interface HTMLCcdesignSocialContainerElement extends Components.CcdesignSocialContainer, HTMLStencilElement {
    }
    var HTMLCcdesignSocialContainerElement: {
        prototype: HTMLCcdesignSocialContainerElement;
        new (): HTMLCcdesignSocialContainerElement;
    };
    interface HTMLMobileNavElement extends Components.MobileNav, HTMLStencilElement {
    }
    var HTMLMobileNavElement: {
        prototype: HTMLMobileNavElement;
        new (): HTMLMobileNavElement;
    };
    interface HTMLElementTagNameMap {
        "ccdesign-button": HTMLCcdesignButtonElement;
        "ccdesign-carousel": HTMLCcdesignCarouselElement;
        "ccdesign-carousel-new": HTMLCcdesignCarouselNewElement;
        "ccdesign-copy": HTMLCcdesignCopyElement;
        "ccdesign-cv-template": HTMLCcdesignCvTemplateElement;
        "ccdesign-footer": HTMLCcdesignFooterElement;
        "ccdesign-grid": HTMLCcdesignGridElement;
        "ccdesign-header": HTMLCcdesignHeaderElement;
        "ccdesign-icon": HTMLCcdesignIconElement;
        "ccdesign-image-card": HTMLCcdesignImageCardElement;
        "ccdesign-lazy-image": HTMLCcdesignLazyImageElement;
        "ccdesign-placeholder": HTMLCcdesignPlaceholderElement;
        "ccdesign-separator": HTMLCcdesignSeparatorElement;
        "ccdesign-social-container": HTMLCcdesignSocialContainerElement;
        "mobile-nav": HTMLMobileNavElement;
    }
}
declare namespace LocalJSX {
    interface CcdesignButton {
        "alt"?: string;
        "color"?: string;
        "eventName"?: string;
        "icon"?: string;
        "type"?: string;
        "url"?: string;
    }
    interface CcdesignCarousel {
        "data"?: string;
        "dataElement"?: JSX.Element;
        "imageSelected"?: number;
        "timeInterval"?: 3000;
    }
    interface CcdesignCarouselNew {
        "data"?: string;
        "dataElement"?: any;
        "imageSelected"?: number;
        "timeInterval"?: 3000;
    }
    interface CcdesignCopy {
        "copy"?: string;
    }
    interface CcdesignCvTemplate {
        "footer"?: string;
        "header"?: string;
    }
    interface CcdesignFooter {
        "data"?: string;
        "dataContent"?: FooterItem;
    }
    interface CcdesignGrid {
        "heading"?: string;
    }
    interface CcdesignHeader {
        "data"?: string;
        "formattedData"?: any;
    }
    interface CcdesignIcon {
        "color"?: string;
        "name"?: string;
        "size"?: string;
        "svg"?: string;
    }
    interface CcdesignImageCard {
        "description"?: string;
        "imageAlt"?: string;
        "imageUrl"?: string;
        "url"?: string;
    }
    interface CcdesignLazyImage {
        "alt"?: string;
        "classNames"?: string;
        "imgSrc"?: string;
    }
    interface CcdesignPlaceholder {
        "alignment"?: PlaceholderAlignment;
        "height"?: PlaceholderHeight;
        "position"?: PlaceholderPosition;
        "width"?: PlaceholderWidth;
    }
    interface CcdesignSeparator {
    }
    interface CcdesignSocialContainer {
        "icon"?: string;
        "url"?: string;
    }
    interface MobileNav {
        "data"?: NavDataItem[];
    }
    interface IntrinsicElements {
        "ccdesign-button": CcdesignButton;
        "ccdesign-carousel": CcdesignCarousel;
        "ccdesign-carousel-new": CcdesignCarouselNew;
        "ccdesign-copy": CcdesignCopy;
        "ccdesign-cv-template": CcdesignCvTemplate;
        "ccdesign-footer": CcdesignFooter;
        "ccdesign-grid": CcdesignGrid;
        "ccdesign-header": CcdesignHeader;
        "ccdesign-icon": CcdesignIcon;
        "ccdesign-image-card": CcdesignImageCard;
        "ccdesign-lazy-image": CcdesignLazyImage;
        "ccdesign-placeholder": CcdesignPlaceholder;
        "ccdesign-separator": CcdesignSeparator;
        "ccdesign-social-container": CcdesignSocialContainer;
        "mobile-nav": MobileNav;
    }
}
export { LocalJSX as JSX };
declare module "@stencil/core" {
    export namespace JSX {
        interface IntrinsicElements {
            "ccdesign-button": LocalJSX.CcdesignButton & JSXBase.HTMLAttributes<HTMLCcdesignButtonElement>;
            "ccdesign-carousel": LocalJSX.CcdesignCarousel & JSXBase.HTMLAttributes<HTMLCcdesignCarouselElement>;
            "ccdesign-carousel-new": LocalJSX.CcdesignCarouselNew & JSXBase.HTMLAttributes<HTMLCcdesignCarouselNewElement>;
            "ccdesign-copy": LocalJSX.CcdesignCopy & JSXBase.HTMLAttributes<HTMLCcdesignCopyElement>;
            "ccdesign-cv-template": LocalJSX.CcdesignCvTemplate & JSXBase.HTMLAttributes<HTMLCcdesignCvTemplateElement>;
            "ccdesign-footer": LocalJSX.CcdesignFooter & JSXBase.HTMLAttributes<HTMLCcdesignFooterElement>;
            "ccdesign-grid": LocalJSX.CcdesignGrid & JSXBase.HTMLAttributes<HTMLCcdesignGridElement>;
            "ccdesign-header": LocalJSX.CcdesignHeader & JSXBase.HTMLAttributes<HTMLCcdesignHeaderElement>;
            "ccdesign-icon": LocalJSX.CcdesignIcon & JSXBase.HTMLAttributes<HTMLCcdesignIconElement>;
            "ccdesign-image-card": LocalJSX.CcdesignImageCard & JSXBase.HTMLAttributes<HTMLCcdesignImageCardElement>;
            "ccdesign-lazy-image": LocalJSX.CcdesignLazyImage & JSXBase.HTMLAttributes<HTMLCcdesignLazyImageElement>;
            "ccdesign-placeholder": LocalJSX.CcdesignPlaceholder & JSXBase.HTMLAttributes<HTMLCcdesignPlaceholderElement>;
            "ccdesign-separator": LocalJSX.CcdesignSeparator & JSXBase.HTMLAttributes<HTMLCcdesignSeparatorElement>;
            "ccdesign-social-container": LocalJSX.CcdesignSocialContainer & JSXBase.HTMLAttributes<HTMLCcdesignSocialContainerElement>;
            "mobile-nav": LocalJSX.MobileNav & JSXBase.HTMLAttributes<HTMLMobileNavElement>;
        }
    }
}
